return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(4,4,7,8,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-posterior transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "purple", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 3, lty = 3)
}
lines(x, y3, type = "l", col = "purple", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "purple", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(4,4,7,8,.5)
plot.beta(4,4,1,1,.5)
plot.beta(4,4,7,8,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "purple", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 3, lty = 3)
}
lines(x, y3, type = "l", col = "purple", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "purple", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(4,4,7,8,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "purple", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "purple", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "purple", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(4,4,7,8,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "purple", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(4,4,7,8,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(4,4,7,8,.5)
plot.beta(10,10,7,8,.5)
plot.beta(10,10,17,25,.5)
plot.beta(1,1,17,25,.5)
plot.beta(1,1,17,25,.75)
plot.beta(15,15,17,25,.75)
plot.beta(15,15,17,25,.5)
plot.beta(20,20,17,25,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
mtext(2, "Density", line =2)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(20,20,17,25,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
mtext(2, "Density", line =1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(20,20,17,25,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(20,20,17,25,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 2, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(3,3,2), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(20,20,17,25,.5)
plot.beta(20,20,15,30,.5)
plot.beta(20,20,18,30,.5)
plot.beta(1,1,18,30,.5)
plot.beta(.5,.5,18,30,.5)
plot.beta(.5,.5,28,30,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 3, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(5,5,3), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(.5,.5,28,30,.5)
plot.beta(0,.5,28,30,.5)
plot.beta(0,2,28,30,.5)
plot.beta(0,6,28,30,.5)
plot.beta(1,6,28,30,.5)
plot.beta(1,6,15,30,.5)
plot.beta(3,6,15,30,.5)
plot.beta(3,6,10,30,.5)
plot.beta(.5,.5,10,30,.5)
plot.beta(1,.5,10,30,.5)
plot.beta(1,.9,10,30,.5)
plot.beta(1,.8,10,30,.5)
plot.beta(1,1,10,30,.5)
plot.beta(10,10,10,30,.5)
plot.beta(10,10,100,300,.5)
plot.beta(10,10,1000,300,.5)
plot.beta(10,10,100,3000,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 3, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior: Beta('PS','PF'", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(5,5,3), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(10,10,100,3000,.5)
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 3, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(5,5,3), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(10,10,100,3000,.5)
plot.beta(10,10,100,300,.5)
## PS = prior success, PF = prior failure
## k = number of observed successes, n = total trials
## null = what is the point-null hypothesis? null = NULL leaves it out of plots and calcs
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # data for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # data for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # data for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation with Binomial Data",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 3, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(5,5,3), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(10,10,100,300,.5)
plot.beta(5,5,7,8,.5)
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
## PS = prior success, PF = prior failure
## k = number of observed successes, n = total trials
## null = what is the point-null hypothesis? null = NULL leaves it out of plots and calcs
plot.beta <- function(PS, PF, k, n, null = NULL) {
x = seq(0, 1, .0001)
y1 = dbeta(x, PS, PF) # data for prior curve
y3 = dbeta(x, PS + k, PF + n - k) # data for posterior curve
y2 = dbinom(k, n, x)/max(dbinom(k, n, x)) * max(y3) # data for likelihood curve
plot(x, y1, xlim=c(0,1), ylim=c(0,max(y2,y3)+.25*(max(y2,y3))), type = "l", ylab= "Density",
xlab= "Probability of success", las=1, main="Prior-to-Posterior Transformation with Binomial Data",lwd=5,
cex.lab=1.5, cex.main=1.5, col = "skyblue", axes=FALSE)
axis(1, at = seq(0,1,.1))
axis(2, las=1)
if(mode(null) == "numeric"){
points(null, dbeta(null, PS, PF), pch = 21, bg = "blue", cex = 1.5)
points(null, dbeta(null, PS + k, PF + n - k), pch = 21, bg = "darkorchid", cex = 1.5)
}
if(n != 0){
lines(x, y2, type = "l", col = "darkorange", lwd = 3, lty = 3)
}
lines(x, y3, type = "l", col = "darkorchid1", lwd = 5)
legend("topright", c("Prior", "Posterior", "Likelihood"), col = c("skyblue", "darkorchid1", "darkorange"),
lty = c(1,1,3), lwd = c(5,5,3), bty = "n", inset = c(-.3, 0), y.intersp = .55,
x.intersp = .40)
abline(v=null, lty = 5, lwd = 1, col = "grey73")
if(mode(null) == "numeric"){
##Calculate BF using Savage-Dickey
null.H0 <- dbeta(null, PS, PF)
null.H1 <- dbeta(null, PS + k, PF + n - k)
return( list("Density of null given H0" = null.H0, "Density of null given H1" = null.H1,
"BF01" = null.H1/null.H0, "BF10" = null.H0/null.H1))
}
}
plot.beta(5,5,7,8,.5)
plot.beta(10,10,7,8,.5)
plot.beta(100,100,7,8,.5)
